{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","console","log","className","href","Counter","prevProps","prevState","counter","value","this","props","getBadgeClasses","formatCount","onClick","onIncrement","onDelete","id","classes","Component","counters","onReset","map","App","state","handleIncrement","index","indexOf","setState","handleReset","counterId","c","handleDelete","filter","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6167590d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst NavBar = ({totalCounters}) => {\r\n  console.log('NavBar - Rendered');\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        Navbar {\" \"} \r\n        <span className=\"badge badge-pill badge-secondary\">\r\n          {totalCounters}\r\n        </span>\r\n      </a>\r\n    </nav>\r\n  );\r\n};\r\n \r\nexport default NavBar;","import React, { Component } from 'react'\r\n\r\nexport default class Counter extends Component {\r\n  \r\n  componentDidUpdate(prevProps, prevState){\r\n    console.log(\"prevProps\", prevProps);\r\n    console.log(\"prevState\", prevState);\r\n    if(prevProps.counter.value !== this.props.counter.value){\r\n      // Ajex call and get new data from the server\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    console.log(\"Counter - Unmount\");\r\n  }\r\n\r\n  render() {\r\n    console.log('Counter - Rendered');\r\n\r\n    return(\r\n      <div>\r\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-sm\"\r\n          >\r\n            Increment\r\n          </button> \r\n          <button \r\n            onClick = {() => this.props.onDelete(this.props.counter.id)} \r\n            className=\"btn btn-danger btn-sm m-2\"\r\n          >\r\n            Delete\r\n          </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses(){\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n  formatCount(){\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Counter from './counter';\r\n\r\nexport default class counters extends Component {\r\n  \r\n  render() {\r\n    console.log('Counters - Rendered');\r\n    const { onReset, counters, onDelete, onIncrement} = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick = {onReset} className=\"btn-primary btn-sm m-2\">\r\n          Reset\r\n        </button>\r\n        {counters.map(counter => (\r\n          <Counter \r\n            key={counter.id} \r\n            onDelete = {onDelete} \r\n            onIncrement = {onIncrement}\r\n            counter = {counter}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters'\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    counters:[\n      {id: 1, value: 0},\n      {id: 2, value: 0},\n      {id: 3, value: 0},\n      {id: 4, value: 0}\n    ]\n  };\n\n  constructor(props){\n    super(props);\n    console.log('App - Constructor');\n  };\n\n  componentDidMount(){\n    console.log('App - Mount');\n  };\n\n  handleIncrement = counter => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = {...counter};\n    counters[index].value++;\n    this.setState({counters});\n  }\n  handleReset = (counterId) => {\n    const counters = this.state.counters.map( c => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({counters});\n  };\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter( c => c.id !== counterId);\n    this.setState({counters});\n  };\n\n  render() {\n    console.log('App - Rendered');\n\n    return (\n      <React.Fragment>\n        <NavBar totalCounters={this.state.counters.filter(c => c.value>0).length} />\n        <main className=\"container\">\n          <Counters \n            counters = {this.state.counters}\n            onReset = {this.handleReset} \n            onDelete = {this.handleDelete} \n            onIncrement = {this.handleIncrement}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}